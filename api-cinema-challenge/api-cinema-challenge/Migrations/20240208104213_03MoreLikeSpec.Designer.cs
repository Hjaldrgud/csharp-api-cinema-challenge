// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240208104213_03MoreLikeSpec")]
    partial class _03MoreLikeSpec
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1047),
                            Email = "oprah.trump@bbc.co.uk",
                            Name = "Oprah Trump",
                            Phone = "61 12 16 23",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1050)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1056),
                            Email = "charles.watts@theworld.ca",
                            Name = "Charles Watts",
                            Phone = "60 76 76 89",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1056)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1060),
                            Email = "brian.moon@nasa.org.us",
                            Name = "Brian Moon",
                            Phone = "91 13 96 54",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1060)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1064),
                            Email = "kate.daltrey@something.com",
                            Name = "Kate Daltrey",
                            Phone = "95 81 62 72",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1064)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1068),
                            Email = "ozzy.winfrey@gov.us",
                            Name = "Ozzy Winfrey",
                            Phone = "92 28 29 67",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1068)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1072),
                            Email = "charles.ward@gov.ru",
                            Name = "Charles Ward",
                            Phone = "71 41 38 71",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1072)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1076),
                            Email = "ginger.jagger@gov.us",
                            Name = "Ginger Jagger",
                            Phone = "58 68 75 53",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1076)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1081),
                            Email = "roger.may@gov.ru",
                            Name = "Roger May",
                            Phone = "42 82 95 44",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1081)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1084),
                            Email = "keith.iommi@gov.ru",
                            Name = "Keith Iommi",
                            Phone = "57 32 65 99",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1084)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1088),
                            Email = "charlie.presley@gov.us",
                            Name = "Charlie Presley",
                            Phone = "56 02 21 57",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1088)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rating");

                    b.Property<int>("Runtime")
                        .HasColumnType("integer")
                        .HasColumnName("runtime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1094),
                            Description = "The story of Henry Hill and his life in the mafia, covering his relationship with his wife Karen and his mob partners Jimmy Conway and Tommy DeVito.",
                            Rating = "R",
                            Runtime = 148,
                            Title = "Goodfellas",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1095)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1096),
                            Description = "In 1980 Miami, a determined Cuban immigrant takes over a drug cartel and succumbs to greed.",
                            Rating = "R",
                            Runtime = 170,
                            Title = "Scarface",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1096)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1097),
                            Description = "A family in 1630s New England is torn apart by the forces of witchcraft, black magic and possession.",
                            Rating = "R",
                            Runtime = 93,
                            Title = "The VVitch: A New-England Folktale",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1098)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1099),
                            Description = "Vampire Count Orlok expresses interest in a new residence and real estate agent Hutter's wife.",
                            Rating = "Not Rated",
                            Runtime = 94,
                            Title = "Nosferatu",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1099)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1100),
                            Description = "When a cockerel apparently flies into a chicken farm, the chickens see him as an opportunity to escape their evil owners.",
                            Rating = "G",
                            Runtime = 84,
                            Title = "Chicken Run",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1101)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_movie_id");

                    b.Property<int>("SilverScreenId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_silver_screen_id");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("starts_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1119),
                            MovieId = 5,
                            SilverScreenId = 1,
                            StartsAt = new DateTime(2024, 2, 8, 15, 42, 13, 115, DateTimeKind.Utc).AddTicks(1112),
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1120)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1121),
                            MovieId = 3,
                            SilverScreenId = 1,
                            StartsAt = new DateTime(2024, 2, 8, 15, 42, 13, 115, DateTimeKind.Utc).AddTicks(1121),
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1121)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1122),
                            MovieId = 5,
                            SilverScreenId = 1,
                            StartsAt = new DateTime(2024, 2, 8, 13, 42, 13, 115, DateTimeKind.Utc).AddTicks(1122),
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1123)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1124),
                            MovieId = 2,
                            SilverScreenId = 2,
                            StartsAt = new DateTime(2024, 2, 8, 14, 42, 13, 115, DateTimeKind.Utc).AddTicks(1123),
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1124)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1124),
                            MovieId = 4,
                            SilverScreenId = 1,
                            StartsAt = new DateTime(2024, 2, 8, 15, 42, 13, 115, DateTimeKind.Utc).AddTicks(1124),
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1125)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.SilverScreen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("silver_screens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 200,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1105),
                            Name = "Inger Johanne",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1106)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 50,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1107),
                            Name = "Dikken",
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1107)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_customer_id");

                    b.Property<int>("NumSeats")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_seats");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_screening_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1128),
                            CustomerId = 3,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1128)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1130),
                            CustomerId = 10,
                            NumSeats = 0,
                            ScreeningId = 4,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1130)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1130),
                            CustomerId = 1,
                            NumSeats = 0,
                            ScreeningId = 3,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1131)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1131),
                            CustomerId = 3,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1131)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1132),
                            CustomerId = 3,
                            NumSeats = 0,
                            ScreeningId = 3,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1132)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1133),
                            CustomerId = 9,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1134)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1134),
                            CustomerId = 2,
                            NumSeats = 0,
                            ScreeningId = 5,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1134)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1135),
                            CustomerId = 6,
                            NumSeats = 0,
                            ScreeningId = 3,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1135)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1135),
                            CustomerId = 3,
                            NumSeats = 0,
                            ScreeningId = 3,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1136)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1137),
                            CustomerId = 7,
                            NumSeats = 0,
                            ScreeningId = 5,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1137)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1137),
                            CustomerId = 10,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1138)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1138),
                            CustomerId = 5,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1138)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1138),
                            CustomerId = 7,
                            NumSeats = 0,
                            ScreeningId = 5,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1139)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1139),
                            CustomerId = 6,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1139)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1140),
                            CustomerId = 6,
                            NumSeats = 0,
                            ScreeningId = 3,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1140)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1140),
                            CustomerId = 1,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1141)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1141),
                            CustomerId = 7,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1141)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1142),
                            CustomerId = 4,
                            NumSeats = 0,
                            ScreeningId = 4,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1142)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1143),
                            CustomerId = 10,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1143)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1143),
                            CustomerId = 5,
                            NumSeats = 0,
                            ScreeningId = 3,
                            UpdatedAt = new DateTime(2024, 2, 8, 10, 42, 13, 115, DateTimeKind.Utc).AddTicks(1144)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
