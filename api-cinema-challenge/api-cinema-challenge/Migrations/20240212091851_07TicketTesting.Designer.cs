// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api_cinema_challenge.Data;

#nullable disable

namespace api_cinema_challenge.Migrations
{
    [DbContext(typeof(CinemaContext))]
    [Migration("20240212091851_07TicketTesting")]
    partial class _07TicketTesting
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api_cinema_challenge.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5318),
                            Email = "kate.trump@google.com",
                            Name = "Kate Trump",
                            Phone = "67 45 42 48",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5320)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5327),
                            Email = "ronnie.dio@gov.ru",
                            Name = "Ronnie Dio",
                            Phone = "40 73 81 67",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5327)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5331),
                            Email = "mick.hendrix@something.com",
                            Name = "Mick Hendrix",
                            Phone = "81 30 29 31",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5332)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5335),
                            Email = "jimi.butler@theworld.ca",
                            Name = "Jimi Butler",
                            Phone = "82 38 31 32",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5335)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5339),
                            Email = "ronnie.may@google.com",
                            Name = "Ronnie May",
                            Phone = "88 73 84 61",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5339)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5343),
                            Email = "roger.butler@something.com",
                            Name = "Roger Butler",
                            Phone = "43 05 97 35",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5343)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5346),
                            Email = "ozzy.daltrey@gov.ru",
                            Name = "Ozzy Daltrey",
                            Phone = "43 53 73 12",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5346)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5349),
                            Email = "elvis.trump@nasa.org.us",
                            Name = "Elvis Trump",
                            Phone = "88 51 61 55",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5349)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5378),
                            Email = "charlie.presley@google.com",
                            Name = "Charlie Presley",
                            Phone = "77 98 15 47",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5378)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5382),
                            Email = "bill.baker@bbc.co.uk",
                            Name = "Bill Baker",
                            Phone = "87 47 39 38",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5382)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("rating");

                    b.Property<int>("Runtime")
                        .HasColumnType("integer")
                        .HasColumnName("runtime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5386),
                            Description = "The story of Henry Hill and his life in the mafia, covering his relationship with his wife Karen and his mob partners Jimmy Conway and Tommy DeVito.",
                            Rating = "R",
                            Runtime = 148,
                            Title = "Goodfellas",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5387)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5389),
                            Description = "In 1980 Miami, a determined Cuban immigrant takes over a drug cartel and succumbs to greed.",
                            Rating = "R",
                            Runtime = 170,
                            Title = "Scarface",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5389)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5390),
                            Description = "A family in 1630s New England is torn apart by the forces of witchcraft, black magic and possession.",
                            Rating = "R",
                            Runtime = 93,
                            Title = "The VVitch: A New-England Folktale",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5390)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5391),
                            Description = "Vampire Count Orlok expresses interest in a new residence and real estate agent Hutter's wife.",
                            Rating = "Not Rated",
                            Runtime = 94,
                            Title = "Nosferatu",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5392)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5392),
                            Description = "When a cockerel apparently flies into a chicken farm, the chickens see him as an opportunity to escape their evil owners.",
                            Rating = "G",
                            Runtime = 84,
                            Title = "Chicken Run",
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5393)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_movie_id");

                    b.Property<int>("ScreenNumber")
                        .HasColumnType("integer")
                        .HasColumnName("screen_number");

                    b.Property<DateTime>("StartsAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("starts_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("screenings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 108,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5416),
                            MovieId = 4,
                            ScreenNumber = 1,
                            StartsAt = new DateTime(2024, 2, 12, 13, 18, 51, 477, DateTimeKind.Utc).AddTicks(5410),
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5417)
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 210,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5419),
                            MovieId = 1,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2024, 2, 12, 12, 18, 51, 477, DateTimeKind.Utc).AddTicks(5419),
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5419)
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 207,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5420),
                            MovieId = 4,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2024, 2, 12, 12, 18, 51, 477, DateTimeKind.Utc).AddTicks(5420),
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5420)
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 211,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5421),
                            MovieId = 2,
                            ScreenNumber = 3,
                            StartsAt = new DateTime(2024, 2, 12, 13, 18, 51, 477, DateTimeKind.Utc).AddTicks(5421),
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5421)
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 105,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5422),
                            MovieId = 3,
                            ScreenNumber = 2,
                            StartsAt = new DateTime(2024, 2, 12, 14, 18, 51, 477, DateTimeKind.Utc).AddTicks(5422),
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5422)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_customer_id");

                    b.Property<int>("NumSeats")
                        .HasColumnType("integer")
                        .HasColumnName("number_of_seats");

                    b.Property<int>("ScreeningId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_screening_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5426),
                            CustomerId = 5,
                            NumSeats = 0,
                            ScreeningId = 5,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5426)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5427),
                            CustomerId = 9,
                            NumSeats = 0,
                            ScreeningId = 4,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5428)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5428),
                            CustomerId = 4,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5428)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5429),
                            CustomerId = 5,
                            NumSeats = 0,
                            ScreeningId = 5,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5429)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5429),
                            CustomerId = 8,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5430)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5431),
                            CustomerId = 4,
                            NumSeats = 0,
                            ScreeningId = 5,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5431)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5431),
                            CustomerId = 4,
                            NumSeats = 0,
                            ScreeningId = 3,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5432)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5432),
                            CustomerId = 2,
                            NumSeats = 0,
                            ScreeningId = 4,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5432)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5433),
                            CustomerId = 4,
                            NumSeats = 0,
                            ScreeningId = 4,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5433)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5434),
                            CustomerId = 10,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5434)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5434),
                            CustomerId = 9,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5435)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5435),
                            CustomerId = 3,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5435)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5435),
                            CustomerId = 9,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5436)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5436),
                            CustomerId = 10,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5436)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5437),
                            CustomerId = 4,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5437)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5437),
                            CustomerId = 1,
                            NumSeats = 0,
                            ScreeningId = 1,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5437)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5438),
                            CustomerId = 6,
                            NumSeats = 0,
                            ScreeningId = 4,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5438)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5439),
                            CustomerId = 3,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5439)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5440),
                            CustomerId = 9,
                            NumSeats = 0,
                            ScreeningId = 3,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5440)
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5440),
                            CustomerId = 5,
                            NumSeats = 0,
                            ScreeningId = 2,
                            UpdatedAt = new DateTime(2024, 2, 12, 9, 18, 51, 477, DateTimeKind.Utc).AddTicks(5441)
                        });
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Screening", b =>
                {
                    b.HasOne("api_cinema_challenge.Models.Movie", null)
                        .WithMany("Screenings")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("api_cinema_challenge.Models.Movie", b =>
                {
                    b.Navigation("Screenings");
                });
#pragma warning restore 612, 618
        }
    }
}
